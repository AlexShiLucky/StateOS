#include <stm32f4_discovery.h>
#include <os.h>

void proc()
{
	static 	 unsigned i = 0;
	volatile unsigned*led;
	         unsigned timePoint;

	switch (i++)
	{
		case  0: led = &LED[0]; timePoint =  500*MSEC; break;
		case  1: led = &LED[1]; timePoint =  625*MSEC; break;
		case  2: led = &LED[2]; timePoint =  750*MSEC; break;
		case  3: led = &LED[3]; timePoint =  875*MSEC; break;
		default: led = &GRN;    timePoint = 1000*MSEC; break;
	}

	for (;;)
	{
		tsk_sleepUntil(timePoint);
		timePoint += SEC/2;
		led[0]++;
	}
}

int main()
{
    LED_Config();
    GRN_Config();
	
	tsk_start(TSK_CREATE(0, proc));
	tsk_start(TSK_CREATE(0, proc));
	tsk_start(TSK_CREATE(0, proc));
	tsk_start(TSK_CREATE(0, proc));
	tsk_start(TSK_CREATE(0, proc));
	
	tsk_stop();
}
